<?php
/*
Plugin Name: oContact 
Description: Un plugin fait par la Dream Team Rocket pour le site o'Picking.
Author: DTR - Dream Team Rocket 
Version: 2.0
*/
/*
modifier la structure de la table des questions via la fonction upgrade_table_questions lors des versions suivantes
modifier l'appel aux fonctions avec la fonction 
décommenter add_action( 'plugins_loaded', 'upgrade_ocontact' ) pour faire appel à la fonction de mise à jour

*/

if ( ! defined( 'WPINC' ) ) {
    http_response_code( 404 );
    exit;
}

global $OCONTACT_VERSION;
$OCONTACT_VERSION = '1.0';
//define( 'OCONTACT_VERSION', '1.0' );

$plugin_dir_path = plugin_dir_path( __FILE__ );

////////////////////////////////////////////////////
///////////////// CREATION TABLE DES COURRIELS RECUS
////////////////////////////////////////////////////

register_activation_hook (__FILE__, 'function_table_contact_install');

function function_table_contact_install()
{
    global $wpdb;
    $table_name = $wpdb->prefix.'contact';
    require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );
    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE " . $table_name ."( 
        id bigint(20) NOT NULL AUTO_INCREMENT,
        contact_ip varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        contact_referer varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        contact_date datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
        contact_mail varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        contact_message text COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        contact_firstname varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        contact_lastname varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        contact_telephone varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
        PRIMARY KEY id (id)
      )". $charset_collate .";";
      dbDelta( $sql );
}

//////////////////////////////////////////////////////////////////////////
///////////////// CREATION TABLE DES QUESTIONS POUR VALIDATION FORMULAIRE
//////////////////////////////////////////////////////////////////////////

function table_questions_install()
{
  global $wpdb;
  $table_name = $wpdb->prefix.'user_questions';
  $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE $table_name ( 
        	id int(20) NOT NULL AUTO_INCREMENT,
            id_question int(20) NOT NULL,
        	question varchar(300) COLLATE utf8mb4_unicode_520_ci NOT NULL,
        	PRIMARY KEY id (id)
      ) $charset_collate;";

      require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );
      dbDelta( $sql );
}


// insertion des données dans la table questions
function table_questions_datas_install() {
	global $wpdb;
	
	$questions = [
	    1 =>"Quelle est la forêt qui brûle et qui fournit 20% de l'oxygène mondial ?",
	    2 =>"Qui produit le plus d’oxygène sur terre ?",
	    3 =>"Quand est ce que la banquise risque de disparaitre celon les scientifiques?",
	    4 =>"Depuis le 11 mars 2013, qu’est-ce que l’UE a décidé d’interdire définitivement ?"
		] ;
	
	
	$table_name = $wpdb->prefix.'user_questions';
	
	foreach($questions as $id_question => $value)
	{
        $wpdb->insert( 
			$table_name, 
			[
                'id_question' => $id_question,
				'question'  => $value
            ] 
		);
	}
}
// activation des fonctions de la table questions
register_activation_hook (__FILE__, 'table_questions_install');
register_activation_hook (__FILE__, 'table_questions_datas_install');


// fonction de mise à jour de la table en cas de modification structure, versions ultérieures
function upgrade_table_questions($wpdb) 
{
    global $wpdb;
    $installed_ver = get_option( "OCONTACT_VERSION");
    //on vérifie que la version du plugin installée est inférieure à la nouvelle voulue
    if ( $installed_ver != $OCONTACT_VERSION ) {
        $sql = "	CREATE TABLE $table_name ( 
                    id int(20) NOT NULL AUTO_INCREMENT,
                    id_question int(20) NOT NULL, 
                    question varchar(300) COLLATE utf8mb4_unicode_520_ci NOT NULL,
                    PRIMARY KEY id (id)
            ) $charset_collate;";

            require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );
            dbDelta( $sql );
            update_option( "OCONTACT_VERSION", $OCONTACT_VERSION );
            $success = empty($wpdb->last_error);
                        return $success;
    }
}


//////////////////////////////////////////////
///////////////// CREATION TABLE DES REPONSES 
//////////////////////////////////////////////


function table_answers_install()
{
  global $wpdb;
  $table_name = $wpdb->prefix.'user_answers';
  $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE $table_name ( 
        id bigint(20) NOT NULL AUTO_INCREMENT,
        rand_answer varchar(250) COLLATE utf8mb4_unicode_520_ci NOT NULL,
        id_question bigint(20) NOT NULL ,
        good_answer tinyint(1), 
        PRIMARY KEY id (id)
      ) $charset_collate;";


      require_once( ABSPATH . 'wp-admin/includes/upgrade.php' );
      dbDelta( $sql );

}

// insertion des données dans la table réponses
// pour ne pas s'embeter, mettre en 1er la bonne réponse
// les index 1,2,3... c'est pour identifier la good_answer

function table_answers_datas_install() {
	global $wpdb;
    
    // tableau pour enregistrer en bdd ! respecter le format [rand_answer, id_question, good_answer]
    $answers = [
        [ "La forêt amazonienne", 1, 1 ],
        [ "La forêt du bassin du Congo", 1,  0 ],
        [ "La taïga", 1, 0 ],
        [ "La forêt de Daintree", 1, 0 ],

        [ "Les cyanobactéries", 2, 1 ],
        [ "Le Phytoplancton", 2,  0 ], 
        [ "Les végétaux", 2, 0 ],

        [ "D'ici 2020", 3, 1  ],
        [ "Entre 2020 at 2050", 3, 0 ], 
        [ "Après 2050", 3, 0  ],

        [ "Les tests cosmétiques sur les animaux", 4, 1  ],
        [ "La cueillette et déracinage intentionnels flore protégée", 4, 0  ],
        [ "L'utilisation des glyphosates",  4,  0  ],
        [ "La circulation d'engins motorisés dans espaces naturels", 4, 0  ]
    ];
       
	
	$table_name = $wpdb->prefix . 'user_answers';
	
	foreach($answers as $answer)
	{
            $wpdb->insert( 
                $table_name, 
                array( 
                    'id_question' => $answer[1],
                    'good_answer' => $answer[2],
                    'rand_answer' => $answer[0]
                ) 
            );
        
	}
}
// activation des fonctions de la table answers
register_activation_hook (__FILE__, 'table_answers_install');
register_activation_hook (__FILE__, 'table_answers_datas_install');


function upgrade_ocontact()
{
    global $OCONTACT_VERSION;
    if ( get_site_option( 'OCONTACT_VERSION' ) != $OCONTACT_VERSION ) {
        table_questions_install();
        table_questions_datas_install();

    }
}
//add_action( 'plugins_loaded', 'upgrade_ocontact' );


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////// FONCTIONS FORMULAIRE
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function ocontact()
{
    //contact_form();
    if (isset($_POST['contact_submit']))
    {

        //------------------RECUPERATION DES INFOS DU MESSAGE ET SANITISATION-------------------------//
        if(isset($_POST['contact_firstname'])&&isset($_POST['contact_lastname'])&&isset($_POST['contact_mail'])&&isset($_POST['contact_message']))
        {
            $mail_admin = get_bloginfo('admin_email');
            //echo "mail admin : ". $mail_admin;
            $urlsite = "http://wwww.opicking.me";

            //recupération des infos du formulaire, on pourrait factoriser la récupération du POST qui est un tableau associatif
            $contact_firstname = $_POST['contact_firstname'];
            $contact_lastname = $_POST['contact_lastname'];
            $contact_mail = $_POST['contact_mail'];
            $contact_message = $_POST['contact_message'];
            if (isset($_POST['contact_telephone']))
            {
                $contact_telephone = $_POST['contact_telephone'];
                //formate l'affichage du tél sous la forme 01 02 03 04 05
                $contact_telephone = wordwrap(sanitize_text_field( $contact_telephone ), 2, ' ', true);
            }
            else 
            {
                $contact_telephone="Non renseigné";
                $sendmail= false;
            }

            //on nettoie les chaines de caractères des champs pour éviter les injections malsaines de codes dans le formulaire (sanitize)
            $contact_firstname = sanitize_text_field( $contact_firstname );
            $contact_lastname = sanitize_text_field( $contact_lastname );
            $contact_mail = sanitize_email( $contact_mail );
            $contact_message = sanitize_textarea_field( $contact_message ); 

            //on récupère les infos des champs du questionnaire
            $id_question = sanitize_text_field($_POST['id_question']);
            $user_answer = sanitize_text_field($_POST['user_answer']);
            $verif_answer = verif_answer($id_question, $user_answer);
            if (!$verif_answer){$send_mail=false; echo "mauvaise réponse";}

            //petites infos de tracking....
            $contact_ip =  $_SERVER['REMOTE_ADDR'] ;  //ip du visiteur (déclarer cnil)
            $contact_date = date("Y-m-d h:i:sa");
            // de quelle page vient l'utilisateur (lien qui renvoie sur cette page)
            $contact_referer = $_SERVER['HTTP_REFERER'];


            //enregistrement dans la table
            global $wpdb;
            
            $wpdb->insert(
              $wpdb->prefix.'contact',
              [
                  'contact_ip' => $contact_ip,
                  'contact_date' => $contact_date,
                  'contact_mail' => $contact_mail,
                  'contact_message' => $contact_message,
                  'contact_firstname' => $contact_firstname,
                  'contact_lastname' => $contact_lastname,
                  'contact_telephone' => $contact_telephone,
              ]
              );

            //envoi à l'adresse de l'administrateur
            $to = $mail_admin;
            //sujet du message
            $subject = 'Courriel du site oPicking';
            // reconstruction du message en vue d'une présentation plus lisible à la réception, au format html et non texte brut
            $message = "
                <html><body>
                <h1>MESSAGE DU SITE OPICKING</h1>
                <table style='border-color: #666; width:100%; border:10px grey solid;' cellpadding='2'>
                        <tr style='background: #eee; border:1px grey dotted;'>
                        <td style='border:1px grey dotted;'><h2>Nom : </h2> </td><td style='border:1px grey dotted;'>".$contact_firstname."</td></tr>
                        <tr ><td style='border:1px grey dotted;'><h2>Prénom : </h2> </td><td style='border:1px grey dotted;'>".$contact_lastname."</td></tr>
                        <tr><td style='border:1px grey dotted;'><h2>Email : </h2> </td><td style='border:1px grey dotted;'>".$contact_mail."</td></tr>
                        <tr><td style='border:1px grey dotted;'><h2>Téléphone : </h2> </td><td style='border:1px grey dotted;'>".$contact_telephone."</td></tr>
                        <tr><td style='border:1px grey dotted;'><h2>Date : </h2> </td><td style='border:1px grey dotted;'>".$contact_date."</td></tr>
                        <tr><td style='border:1px grey dotted;'><h2>IP : </h2> </td><td style='border:1px grey dotted;'>".$contact_ip."<a href='https://www.hostip.fr/' target='blank'>Lien</a></td></tr>
                        <tr><td style='border:1px grey dotted;'><h2>Referer : </h2> </td><td style='border:1px grey dotted;'>".$contact_referer."</td></tr>
                        <tr><td style='border:1px grey dotted;'><h2>Message : </h2></td><td style='border:1px grey dotted;'>.$contact_message.</td></tr>
                </table>
                </body></html>
            ";


            //création des entêtes pour l'envoi de mails, au format html, avec encodage UTF-8
            $headers = "From: " . $contact_mail . "\r\n";
            $headers .= "Reply-To: ". $contact_mail . "\r\n";
            $headers .= "MIME-Version: 1.0\r\n";
            $headers .= "Content-Type: text/html; charset= utf8\n";

            // utilisation de la fonction mail de php pour envoyer le message à l'administrateur
            // envoi du message de confirmation à l'utilisateur si l'envoi a mail admin n'a pas eu d'échec 
            if (mail($to, $subject, $message, $headers))
            {
                $messageback = "<b>Bonjour ".$contact_lastname." ".$contact_firstname.", votre message a <a href='".$urlsite."'>".get_bloginfo('name')." a bien été envoyé, nous y répondrons au plus vite.<br>Veuillez ne pas répondre àn ce message";
                // $headersback = "From: " . $contact_mail . "\r\n";
                // $headersback .= "Reply-To: ". $contact_mail . "\r\n";
                $headersback = "MIME-Version: 1.0\r\n";
                $headersback .= "Content-Type: text/html; charset= utf8\n";
                if (mail($contact_mail, 'Message à oPicking',$messageback, $headersback)){ 
                    echo "email envoyé";
                    contact_form("","","","","");
                }else{
                    echo "message non envoyé";
                    contact_form($contact_firstname,$contact_lastname,$contact_mail,$contact_telephone,$contact_message);
                }
            }
            else{
                echo "message non envoyé";
                contact_form($contact_firstname,$contact_lastname,$contact_mail,$contact_telephone,$contact_message);
            }

        }
        else {
            echo "il manque :";
            if(!isset($_POST['contact_firstname'])){echo " prénom,";}
            if(!isset($_POST['contact_lastname'])){echo " nom";}
            if(!isset($_POST['contact_mail'])){echo " mail,";}
            if(!isset($_POST['contact_message'])){echo " message,";}
            contact_form($contact_firstname,$contact_lastname,$contact_mail,$contact_telephone,$contact_message);
        }
    }
    else
    {
        contact_form("","","","","");
    }
}

////////////////////////////////////////
//fonction qui affiche le formulaire
////////////////////////////////////////
function contact_form($contact_firstname,$contact_lastname, $contact_mail, $contact_telephone, $contact_message){
   
    
    echo"
       <div  class='container'>
            <div class='contact__form'>
                <h2>Restez en  <span class='titrejaune'>Contact avec nous</span></h2>
                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ad ipsam dicta</p> 
                <form method='POST' action='' >
                    <div class='row'> 
                   
                        <div class='col-12 col-md-6 contact_left'>
                                <div class='form-group'>
                                    <input type='text' class='form-control' id='contact_firstname' name='contact_firstname' placeholder='Entrez votre prénom*' value=$contact_firstname >
                                </div>
                                <div class='form-group'>
                                    <input type='text' class='form-control' id='contact_lastname' name='contact_lastname' placeholder='Entrez votre nom*' value=$contact_lastname>
                                </div>
                                <div class='form-group'>
                                    <input type='email' class='form-control' id='contact_mail' name='contact_mail' placeholder='Entrez votre adresse email*' value=$contact_mail>
                                </div>
                                <div class='form-group'>
                                    <input type='text' class='form-control' id='contact_telephone' name='contact_telephone' placeholder='Entrez votre n° de téléphone' value=$contact_telephone>
                                </div>

                        </div>
                        <div class='col-12 col-md-6 contact_right'>
                            <div class='form-group'>
                                <textarea class='form-control' id='contact_message' name='contact_message'  rows='5' placeholder='Votre message'>$contact_message</textarea>
                                <small id='emailHelp' class='form-text text-muted'>* Champs obligatoires</small>
                                ";
                                add_question();
                                echo"<br><button type='submit' name='contact_submit'>Envoyer</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div> 
    ";
}

/////////////////////////////////////////////////////////////////////////////
// fonction de création de la question  avec la liste des réponses possibles
/////////////////////////////////////////////////////////////////////////////
function add_question(){
    global $wpdb;
    // requête pour compter le nombre de questions
    $sql = $wpdb->get_results("
                        SELECT * FROM " . $wpdb->prefix . "user_questions 
                    "); 
    $number_questions = $wpdb->num_rows;

    $chosen_id = rand(1,$number_questions);

    $sql = $wpdb->get_results("
                    SELECT question FROM " . $wpdb->prefix . "user_questions
                    WHERE id_question = $chosen_id
                    "); 
   $question = $sql[0]->question;
   echo "<br>".$question."<br>";
   $sql = $wpdb->get_results("
        SELECT * FROM " . $wpdb->prefix . "user_answers WHERE id_question = $chosen_id  ORDER BY rand_answer ASC
    ");

    //affichage de la liste des réponses possibles + champ caché indiquant l'id de la question
    echo "<select name=\"user_answer\">";
    foreach($sql as $key=>$value)
    {
        echo"<option value=\"".$value->rand_answer."\">".$value->rand_answer."</option>";
    }
    echo "</select>
    <input type=\"hidden\" name=\"id_question\" value=\"".$chosen_id."\"></input><br>";
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Fonction de vérification de la réponse utilisateur à la question, retourne true si bonne réponse, false si mauvaise
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
function verif_answer($id_question, $user_answer)
{
    global $wpdb;
    echo "<bR>id_question : ".$id_question."<br> user_answer : ".$user_answer."<br>";


    //requete qui va rechercher que la réponse de l'utilisateur $user_answer soit pour la question $id_question, la bonne réponse en base (1 pour good_answer) et va compter le nombre de résultats, si la requete est vide, la réponse de l'utilisateur est fausse

    $sql = $wpdb->get_results("
        SELECT COUNT(*) FROM " . $wpdb->prefix . "user_answers 
        INNER JOIN " . $wpdb->prefix . "user_questions 
        ON " . $wpdb->prefix . "user_questions.id_question = " . $wpdb->prefix . "user_answers.id_question 
        WHERE " . $wpdb->prefix . "user_answers.id_question = $id_question
        AND " . $wpdb->prefix . "user_answers.good_answer = 1 
        AND " . $wpdb->prefix . "user_answers.rand_answer = '".$user_answer."'
    ");
    if ($sql){return true;} else{ return false;}
}